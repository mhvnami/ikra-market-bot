import os
from aiogram import Router, F
from aiogram.types import (
    Message, CallbackQuery, FSInputFile,
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton
)
from aiogram.filters import Command
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
ADMIN_ID = int(os.getenv("ADMIN_ID", "1780044773"))
SENDER_CITY_CODE = os.getenv("CDEK_SENDER_CODE", "44")  # –ö–æ–¥ –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –≤ –°–î–≠–ö

router = Router()

class OrderStates(StatesGroup):
    choosing = State()  # –í—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞
    quantity = State()  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
    add_more = State()  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
    collecting_name = State()  # –°–±–æ—Ä –∏–º–µ–Ω–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    collecting_phone = State()  # –°–±–æ—Ä –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    collecting_address = State()  # –°–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏
    selecting_city = State()  # –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
    selecting_pvz = State()  # –í—ã–±–æ—Ä –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–∫–∞–∑–æ–≤ (–ü–í–ó)
    waiting_payment = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
    confirming_order = State()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üõç –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑")],
            [KeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")]
        ],
        resize_keyboard=True
    )

# –ö–Ω–æ–ø–∫–∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
def info_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", url="https://t.me/oh_my_nami")],
        [InlineKeyboardButton(text="üì¢ –ö–∞–Ω–∞–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏", url="https://t.me/GoldAstraShop")],
        [InlineKeyboardButton(text="üì¶ –û–ø—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑", url="https://t.me/oh_my_nami")],
        [InlineKeyboardButton(text="üõí –ú–∞–≥–∞–∑–∏–Ω –Ω–∞ –ê–≤–∏—Ç–æ", url="https://www.avito.ru/brands/i151719409?src=sharing")]
    ])

@router.message(Command("start"))
async def start(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω ¬´–ê—Å—Ç—Ä–∞—Ö–∞–Ω—Å–∫–æ–µ –∑–æ–ª–æ—Ç–æ¬ª!</b>\n\n"
        "üêü –°–≤–µ–∂–∞—è –∏–∫—Ä–∞ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–æ –†–æ—Å—Å–∏–∏ —á–µ—Ä–µ–∑ –°–î–≠–ö.\n\n"
        "‚ùóÔ∏è–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ ‚Äî –æ—Ç 1 –∫–≥ (–º–æ–∂–Ω–æ —Ä–∞–∑–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏)\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
@router.message(F.text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
async def send_info(message: Message):
    await message.answer(
        "‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã ‚Äî <b>–ø–∏—à–∏—Ç–µ</b>, –º—ã –æ—Ç–≤–µ—á–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ!\n\n"
        "üë®‚Äçüíª –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞: <b>@oh_my_nami\n</b>"
        "üì¢ –ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª: \n"
        "<b>@GoldAstraShop</b>\n"
        "üì¶ –û–ø—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã (–æ—Ç 20 –∫–≥): <b>@oh_my_nami</b>\n\n"

        "üìå <a href='https://telegra.ph/Dobro-pozhalovat-v-magazin-Astrahanskoe-Zoloto-05-07'>–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?</a>\n"
        "üìå <a href='https://t.me/c/2600077572/3'>–û –¥–æ—Å—Ç–∞–≤–∫–µ.</a>\n"
        "üìå <a href='https://t.me/c/2600077572/4'>–î–æ–µ–¥–µ—Ç –ª–∏ –∏–∫—Ä–∞ —Å–≤–µ–∂–µ–π?</a>\n\n"
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ <b>–ê—Å—Ç—Ä–∞—Ö–∞–Ω—Å–∫–æ–µ –ó–æ–ª–æ—Ç–æ</b>! üêüüíõ",
        reply_markup=info_menu()  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
    )
    
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "üõç –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"
@router.message(F.text == "üõç –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑")
async def choose_product(message: Message, state: FSMContext):
    await state.set_state(OrderStates.choosing)
    await state.update_data(cart=[], total_weight=0)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–∫—Ä—É:", reply_markup=products_menu())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ (–∏–∫—Ä—ã)
@router.callback_query(F.data.startswith("item_"))
async def handle_item(call: CallbackQuery, state: FSMContext):
    item = call.data.split("_")[1]
    product_info = {
        "1": {
            "name": "üêü <b>–ò–∫—Ä–∞ —â—É–∫–∏</b>",
            "price": 2450,
            "photo": "images/pike.jpg",
            "desc": (
                "‚ú® <b>–û—Ö–ª–∞–∂–¥—ë–Ω–Ω–∞—è, —Å–ª–∞–±–æ—Å–æ–ª–µ–Ω–∞—è</b>\n"
                "–°–æ—Å—Ç–∞–≤: <b>–∏–∫—Ä–∞ —â—É–∫–∏, —Å–æ–ª—å</b>.\n"
                "–í–µ—Å: <b>0.5 –∫–≥</b>\n\n"
                "üîã <b>–ö–ë–ñ–£ (–Ω–∞ 100 –≥):</b>\n"
                "‚Ä¢ –ë–µ–ª–∫–∏: <b>26 –≥</b>\n"
                "‚Ä¢ –ñ–∏—Ä—ã: <b>3 –≥</b>\n"
                "‚Ä¢ –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å: <b>131 –∫–∫–∞–ª</b> / 548 –∫–î–∂\n\n"
                "üëå <b>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</b>\n"
                "–ò–∫—Ä–∞ —â—É–∫–∏ ‚Äî —ç—Ç–æ –¥–µ–ª–∏–∫–∞—Ç–µ—Å, –∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–≤–æ–∏–º –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º –≤–∫—É—Å–æ–º –∏ –±–æ–≥–∞—Ç—ã–º —Å–æ—Å—Ç–∞–≤–æ–º. "
                "–û–Ω–∞ —Å—Ç–∞–Ω–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–º –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫ –ª—é–±–æ–º—É —Å—Ç–æ–ª—É –∏ –ø–æ–¥–∞—Ä–∏—Ç –≤–∞–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –≤–∫—É—Å–æ–≤—ã–µ –æ—â—É—â–µ–Ω–∏—è."
            )
        },
        "2": {
            "name": "üé® <b>–ò–∫—Ä–∞ —â—É–∫–∏ –∫—Ä–∞—à–µ–Ω–∞—è</b>",
            "price": 3000,
            "photo": "images/pike_colored.jpg",
            "desc": (
                "‚ú® <b>–°–æ—Å—Ç–∞–≤:</b> –∏–∫—Ä–∞ —â—É–∫–∏, —Å–æ–ª—å, –∫—Ä–∞—Å–∏—Ç–µ–ª—å –í–ê–†–≠–õ–¨.\n"
                "–í–µ—Å: <b>0.5 –∫–≥</b>\n\n"
                "üîã <b>–ö–ë–ñ–£ (–Ω–∞ 100 –≥):</b>\n"
                "‚Ä¢ –ë–µ–ª–∫–∏: <b>26 –≥</b>\n"
                "‚Ä¢ –ñ–∏—Ä—ã: <b>3 –≥</b>\n"
                "‚Ä¢ –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å: <b>131 –∫–∫–∞–ª</b> / 548 –∫–î–∂\n\n"
                "üëå <b>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</b>\n"
                "–ù–∞—Å—ã—â–µ–Ω–Ω–∞—è –∏ —è—Ä–∫–∞—è –∏–∫—Ä–∞ —â—É–∫–∏ –∫—Ä–∞—à–µ–Ω–∞—è –ø—Ä–∏–≤–Ω–µ—Å–µ—Ç –≤ –≤–∞—à—É —Ç—Ä–∞–ø–µ–∑—É —è—Ä–∫–∏–µ –∫—Ä–∞—Å–∫–∏ –∏ –≤–∫—É—Å! "
                "–ò–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–µ–±—è –∏–ª–∏ –±–ª–∏–∑–∫–∏—Ö –Ω–µ–æ–±—ã—á–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º –¥–µ–ª–∏–∫–∞—Ç–µ—Å–æ–º."
            )
        }
    }

    selected_product = product_info.get(item)
    if selected_product:
        await state.update_data(selected_product=selected_product, qty=1)
        photo = FSInputFile(selected_product["photo"])
        await call.message.answer_photo(
            photo,
            caption=f"{selected_product['name']}\n<b>–¶–µ–Ω–∞:</b> {selected_product['price']}‚ÇΩ –∑–∞ 0.5 –∫–≥"
        )
        await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–Ω–æ–∫ (–ø–æ 0.5 –∫–≥):", reply_markup=quantity_buttons(1))
        await state.set_state(OrderStates.quantity)
    await call.answer()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
@router.callback_query(F.data.startswith("increase_"))
async def increase_quantity(call: CallbackQuery, state: FSMContext):
    qty = int(call.data.split("_")[1]) + 1
    await state.update_data(qty=qty)
    await call.message.edit_reply_markup(reply_markup=quantity_buttons(qty))
    await call.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
@router.callback_query(F.data.startswith("decrease_"))
async def decrease_quantity(call: CallbackQuery, state: FSMContext):
    qty = int(call.data.split("_")[1]) - 1
    if qty < 1:
        qty = 1
    await state.update_data(qty=qty)
    await call.message.edit_reply_markup(reply_markup=quantity_buttons(qty))
    await call.answer()

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
@router.callback_query(F.data == "confirm_qty")
async def confirm_quantity(call: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    product = data["selected_product"]
    qty = data["qty"]
    product_weight = qty * 0.5  # –≤–µ—Å –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ (0.5 –∫–≥)
    packaging = 0.8 if data.get("cart") == [] else 0.0  # –¥–æ–±–∞–≤–ª—è–µ–º —É–ø–∞–∫–æ–≤–∫—É, –µ—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞—è
    weight = product_weight + packaging  # –æ–±—â–∏–π –≤–µ—Å —Ç–æ–≤–∞—Ä–∞
    new_item = {
        "name": product["name"],
        "qty": qty,
        "weight": weight,
        "sum": product["price"] * qty  # —Å—É–º–º–∞ –∑–∞ —Ç–æ–≤–∞—Ä
    }
    cart = data.get("cart", [])
    cart.append(new_item)
    total_weight = sum(item['weight'] for item in cart)  # –æ–±—â–∏–π –≤–µ—Å –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
    await state.update_data(cart=cart, total_weight=total_weight)  # –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    await call.message.answer(
        f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {product['name']} ‚Äî {qty} —à—Ç. (~{weight:.1f} –∫–≥)",
        reply_markup=next_step_menu()  # –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    )
    await state.set_state(OrderStates.add_more)  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
    await call.answer()

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
@router.callback_query(F.data == "add_more")
async def add_more_items(call: CallbackQuery, state: FSMContext):
    await state.set_state(OrderStates.choosing)  # –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Ç–æ–≤–∞—Ä–∞
    await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=products_menu())  # –ø—Ä–µ–¥–ª–æ–∂–∏–º –≤—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞
    await call.answer()

# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ (–æ—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã)
@router.callback_query(F.data == "edit_order")
async def edit_order(call: CallbackQuery, state: FSMContext):
    await state.update_data(cart=[], total_weight=0)  # –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    await state.set_state(OrderStates.choosing)  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Ç–æ–≤–∞—Ä–∞
    await call.message.answer("üßπ –ó–∞–∫–∞–∑ —Å–±—Ä–æ—à–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –∑–∞–Ω–æ–≤–æ:", reply_markup=products_menu())  # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—á–∏—Å—Ç–∫–µ
    await call.answer()

# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ (–ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–±–æ—Ä—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
@router.callback_query(F.data == "proceed")
async def proceed_to_checkout(call: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    if data.get("total_weight", 0) < 1:  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑
        await call.message.answer("‚ùóÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ ‚Äî –æ—Ç 1 –∫–≥.")
        return
    await state.set_state(OrderStates.collecting_name)  # –∑–∞–ø—Ä–æ—Å–∏–º –§–ò–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await call.message.answer("–í–≤–µ–¥–∏—Ç–µ –§–ò–û –ø–æ–ª—É—á–∞—Ç–µ–ª—è:")
    await call.answer()

# –°–±–æ—Ä –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(OrderStates.collecting_name)
async def collect_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text.strip())  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –§–ò–û
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")  # –∑–∞–ø—Ä–æ—Å–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω
    await state.set_state(OrderStates.collecting_phone)

# –°–±–æ—Ä –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(OrderStates.collecting_phone)
async def collect_phone(message: Message, state: FSMContext):
    await state.update_data(phone=message.text.strip())  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏ (–¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –°–î–≠–ö):")  # –∑–∞–ø—Ä–æ—Å–∏–º –≥–æ—Ä–æ–¥
    await state.set_state(OrderStates.collecting_address)

# –°–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
@router.message(OrderStates.waiting_payment)
async def handle_payment(message: Message, state: FSMContext):
    if not (message.photo or message.document):
        await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <b>—Ñ–æ—Ç–æ</b> –∏–ª–∏ <b>—Ñ–∞–π–ª</b> —Å —á–µ–∫–æ–º.")
        return

    data = await state.get_data()
    bot = message.bot

    # –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    admin_chat_id = os.getenv('ADMIN_CHAT_ID')
    admin_text = (
        "üì¶ <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!</b>\n\n"
        f"<b>–ò–º—è:</b> {data['name']}\n"
        f"<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {data['phone']}\n"
        f"<b>–ì–æ—Ä–æ–¥:</b> {data['city']}\n"
        f"<b>–ö–æ–¥ –ü–í–ó:</b> {data.get('pvz_code', '-')}\n"
        f"<b>–û–±—â–∏–π –≤–µ—Å:</b> {data['total_weight']} –∫–≥\n"
        f"<b>–î–æ—Å—Ç–∞–≤–∫–∞:</b> {data['delivery_price']} ‚ÇΩ\n"
        f"<b>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</b> {data['total_price']} ‚ÇΩ\n\n"
        "<b>–ó–∞–∫–∞–∑:</b>\n"
    )
    for item in data["cart"]:
        admin_text += f"{item['name']} ‚Äî {item['qty']} —à—Ç. = {item['sum']}‚ÇΩ\n"

    await bot.send_message(admin_chat_id, admin_text)

    if message.photo:
        await bot.send_photo(admin_chat_id, message.photo[-1].file_id, caption="üßæ –ß–µ–∫")
    elif message.document:
        await bot.send_document(admin_chat_id, message.document.file_id, caption="üßæ –ß–µ–∫")

    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç, –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ.")
    await state.clear()
